{
  "name": "💳 Simple Transaction Display",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "▶️ Click to Run",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "resource": "transaction",
        "operation": "sync",
        "accessToken": "access-sandbox-725be19f-1795-4597-9256-e503fc903ae3",
        "cursor": "",
        "returnAll": false,
        "limit": 25,
        "additionalFields": {}
      },
      "id": "get-transactions",
      "name": "💳 Get Recent Transactions",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        460,
        300
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Clean up transaction data for display\nconst transactions = $input.all();\n\nconst cleanTransactions = transactions.map(item => {\n  const tx = item.json;\n  \n  return {\n    json: {\n      date: tx.date,\n      merchant: tx.merchant_name || tx.name || 'Unknown Merchant',\n      amount: `$${Math.abs(tx.amount || 0).toFixed(2)}`,\n      type: tx.amount > 0 ? '💸 Expense' : '💰 Income',\n      category: tx.personal_finance_category?.primary || tx.category?.[0] || 'Other',\n      account: tx.account_id?.slice(-4) || 'Unknown'\n    }\n  };\n});\n\nreturn cleanTransactions;"
      },
      "id": "format-transactions",
      "name": "🧹 Format for Display",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Create a simple readable summary of transactions\nconst transactions = $input.all();\n\n// Create summary header\nconst summary = {\n  total_transactions: transactions.length,\n  transaction_list: [],\n  generated_at: new Date().toLocaleString()\n};\n\n// Add each transaction to the list\ntransactions.forEach((item, index) => {\n  const tx = item.json;\n  summary.transaction_list.push({\n    number: index + 1,\n    display: `${tx.date} | ${tx.merchant} | ${tx.amount} | ${tx.type} | ${tx.category}`,\n    details: {\n      date: tx.date,\n      merchant: tx.merchant,\n      amount: tx.amount,\n      type: tx.type,\n      category: tx.category,\n      account: tx.account\n    }\n  });\n});\n\nreturn [{ json: summary }];"
      },
      "id": "display-summary",
      "name": "📊 Transaction Summary",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        300
      ]
    }
  ],
  "connections": {
    "▶️ Click to Run": {
      "main": [
        [
          {
            "node": "💳 Get Recent Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "💳 Get Recent Transactions": {
      "main": [
        [
          {
            "node": "🧹 Format for Display",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🧹 Format for Display": {
      "main": [
        [
          {
            "node": "📊 Transaction Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": false,
    "instanceId": "simple-transaction-display"
  },
  "id": "simple-transaction-display",
  "tags": [
    {
      "createdAt": "2025-01-01T00:00:00.000Z",
      "updatedAt": "2025-01-01T00:00:00.000Z",
      "id": "transaction-viewer",
      "name": "transaction-viewer"
    }
  ]
}