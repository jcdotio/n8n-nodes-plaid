{
  "name": "Complete Plaid Node Showcase",
  "nodes": [
    {
      "parameters": {},
      "id": "f6f4b080-7b6a-4c6b-8b1a-9f3c2d1e0a1b",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "resource": "linkToken",
        "operation": "create",
        "userId": "demo_user_123",
        "clientName": "n8n Plaid Demo",
        "products": ["transactions", "auth", "identity"],
        "countryCodes": ["US"],
        "language": "en"
      },
      "id": "link-token-create",
      "name": "1. Create Link Token",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        460,
        200
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "resource": "institution",
        "operation": "search",
        "searchQuery": "Chase",
        "countryCode": "US"
      },
      "id": "institution-search",
      "name": "2. Search Institutions",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        460,
        320
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "resource": "linkToken",
        "operation": "exchangeToken",
        "publicToken": "public-sandbox-replace-with-actual-token"
      },
      "id": "token-exchange",
      "name": "3. Exchange Public Token",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        460,
        440
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      },
      "notes": "Replace publicToken with actual token from Plaid Link flow"
    },
    {
      "parameters": {
        "resource": "account",
        "operation": "getAll",
        "accessToken": "access-sandbox-replace-with-actual-token"
      },
      "id": "get-accounts",
      "name": "4. Get All Accounts",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        680,
        200
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      },
      "notes": "Use access_token from step 3 or your existing token"
    },
    {
      "parameters": {
        "resource": "account",
        "operation": "getBalances",
        "accessToken": "access-sandbox-replace-with-actual-token"
      },
      "id": "get-balances",
      "name": "5. Get Real-time Balances",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        680,
        320
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "resource": "transaction",
        "operation": "sync",
        "accessToken": "access-sandbox-replace-with-actual-token",
        "cursor": "",
        "returnAll": false,
        "limit": 25,
        "additionalFields": {
          "includeOriginalDescription": true,
          "includePersonalFinanceCategory": true
        }
      },
      "id": "sync-transactions",
      "name": "6. Sync Recent Transactions",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        680,
        440
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "resource": "transaction",
        "operation": "getRange",
        "accessToken": "access-sandbox-replace-with-actual-token",
        "startDate": "2024-01-01T00:00:00.000Z",
        "endDate": "2024-01-31T23:59:59.999Z",
        "returnAll": false,
        "limit": 50,
        "additionalFields": {
          "includePersonalFinanceCategory": true
        }
      },
      "id": "get-range-transactions",
      "name": "7. Get January Transactions",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        900,
        200
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "resource": "auth",
        "operation": "get",
        "accessToken": "access-sandbox-replace-with-actual-token"
      },
      "id": "get-auth",
      "name": "8. Get Auth Data",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        900,
        320
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      },
      "notes": "Gets routing/account numbers for ACH transfers"
    },
    {
      "parameters": {
        "resource": "identity",
        "operation": "get",
        "accessToken": "access-sandbox-replace-with-actual-token"
      },
      "id": "get-identity",
      "name": "9. Get Identity Data",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        900,
        440
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "resource": "item",
        "operation": "get",
        "accessToken": "access-sandbox-replace-with-actual-token"
      },
      "id": "get-item",
      "name": "10. Get Item Info",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        1120,
        200
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      }
    },
    {
      "parameters": {
        "resource": "institution",
        "operation": "getById",
        "institutionId": "ins_3",
        "countryCode": "US"
      },
      "id": "get-institution-details",
      "name": "11. Get Chase Details",
      "type": "n8n-nodes-plaid.plaid",
      "typeVersion": 1,
      "position": [
        1120,
        320
      ],
      "credentials": {
        "plaidApi": {
          "id": "plaid-credentials-id",
          "name": "Plaid API"
        }
      },
      "notes": "ins_3 is Chase Bank's institution ID"
    },
    {
      "parameters": {
        "jsCode": "// Process and summarize all the Plaid data\nconst allItems = $input.all();\n\nconst summary = {\n  workflow_completed: new Date().toISOString(),\n  total_operations: allItems.length,\n  operations_summary: {},\n  sample_data: {}\n};\n\n// Group by source/operation type\nallItems.forEach((item, index) => {\n  const data = item.json;\n  const source = data.source || 'unknown';\n  \n  if (!summary.operations_summary[source]) {\n    summary.operations_summary[source] = {\n      count: 0,\n      sample_fields: []\n    };\n  }\n  \n  summary.operations_summary[source].count += 1;\n  \n  // Capture sample fields (first occurrence)\n  if (summary.operations_summary[source].sample_fields.length === 0) {\n    summary.operations_summary[source].sample_fields = Object.keys(data).slice(0, 5);\n    summary.sample_data[source] = {\n      example_record: data,\n      total_fields: Object.keys(data).length\n    };\n  }\n});\n\n// Add specific insights for different data types\nconst transactions = allItems.filter(item => \n  item.json.source === 'plaid_sync' || item.json.source === 'plaid_get'\n);\n\nif (transactions.length > 0) {\n  const amounts = transactions.map(t => t.json.amount).filter(a => a);\n  summary.transaction_insights = {\n    total_transactions: transactions.length,\n    total_amount: amounts.reduce((sum, amt) => sum + amt, 0),\n    average_amount: amounts.reduce((sum, amt) => sum + amt, 0) / amounts.length,\n    largest_transaction: Math.max(...amounts),\n    categories: [...new Set(transactions.map(t => t.json.category).filter(c => c))]\n  };\n}\n\nconst accounts = allItems.filter(item => \n  item.json.source === 'plaid_accounts' || item.json.source === 'plaid_balances'\n);\n\nif (accounts.length > 0) {\n  summary.account_insights = {\n    total_accounts: accounts.length,\n    account_types: [...new Set(accounts.map(a => a.json.type).filter(t => t))],\n    account_subtypes: [...new Set(accounts.map(a => a.json.subtype).filter(s => s))]\n  };\n}\n\nreturn [{\n  json: {\n    plaid_showcase_summary: summary,\n    success: true,\n    message: \"Plaid node showcase completed successfully! Check the summary above for insights into your financial data.\",\n    next_steps: [\n      \"1. Review the operations_summary to see what data was retrieved\",\n      \"2. Check sample_data to understand the structure of each data type\", \n      \"3. Use transaction_insights and account_insights for financial analysis\",\n      \"4. Modify the workflow to focus on specific operations you need\",\n      \"5. Set up recurring workflows with cron triggers for ongoing monitoring\"\n    ]\n  }\n}];"
      },
      "id": "summarize-results",
      "name": "12. Summarize Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1340,
        300
      ]
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "1. Create Link Token",
            "type": "main",
            "index": 0
          },
          {
            "node": "2. Search Institutions", 
            "type": "main",
            "index": 0
          },
          {
            "node": "3. Exchange Public Token",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "1. Create Link Token": {
      "main": [
        [
          {
            "node": "4. Get All Accounts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2. Search Institutions": {
      "main": [
        [
          {
            "node": "5. Get Real-time Balances",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3. Exchange Public Token": {
      "main": [
        [
          {
            "node": "6. Sync Recent Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4. Get All Accounts": {
      "main": [
        [
          {
            "node": "7. Get January Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5. Get Real-time Balances": {
      "main": [
        [
          {
            "node": "8. Get Auth Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "6. Sync Recent Transactions": {
      "main": [
        [
          {
            "node": "9. Get Identity Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "7. Get January Transactions": {
      "main": [
        [
          {
            "node": "10. Get Item Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "8. Get Auth Data": {
      "main": [
        [
          {
            "node": "11. Get Chase Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "9. Get Identity Data": {
      "main": [
        [
          {
            "node": "12. Summarize Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "10. Get Item Info": {
      "main": [
        [
          {
            "node": "12. Summarize Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "11. Get Chase Details": {
      "main": [
        [
          {
            "node": "12. Summarize Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": false,
    "instanceId": "plaid-showcase-instance"
  },
  "id": "plaid-complete-showcase",
  "tags": [
    {
      "createdAt": "2025-01-01T00:00:00.000Z",
      "updatedAt": "2025-01-01T00:00:00.000Z", 
      "id": "plaid-demo",
      "name": "plaid-demo"
    },
    {
      "createdAt": "2025-01-01T00:00:00.000Z",
      "updatedAt": "2025-01-01T00:00:00.000Z",
      "id": "banking",
      "name": "banking"
    },
    {
      "createdAt": "2025-01-01T00:00:00.000Z",
      "updatedAt": "2025-01-01T00:00:00.000Z",
      "id": "financial-data",
      "name": "financial-data"
    }
  ]
}